// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stargaze/dao/v1/dao.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Params struct {
	GenesisAllocation types.Coin `protobuf:"bytes,1,opt,name=genesis_allocation,json=genesisAllocation,proto3" json:"genesis_allocation" yaml:"genesis_allocation"`
	GenesisSender     string     `protobuf:"bytes,2,opt,name=genesis_sender,json=genesisSender,proto3" json:"genesis_sender" yaml:"genesis_sender"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_954f364b84d70172, []int{0}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetGenesisAllocation() types.Coin {
	if m != nil {
		return m.GenesisAllocation
	}
	return types.Coin{}
}

func (m *Params) GetGenesisSender() string {
	if m != nil {
		return m.GenesisSender
	}
	return ""
}

func init() {
	proto.RegisterType((*Params)(nil), "stargaze.dao.v1.Params")
}

func init() { proto.RegisterFile("stargaze/dao/v1/dao.proto", fileDescriptor_954f364b84d70172) }

var fileDescriptor_954f364b84d70172 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x3d, 0x4b, 0xc3, 0x40,
	0x1c, 0xc6, 0x73, 0x0e, 0x05, 0x23, 0x2a, 0x06, 0x85, 0xb6, 0xc3, 0xa5, 0x64, 0x2a, 0x88, 0x77,
	0x44, 0x07, 0xc1, 0xcd, 0xba, 0x38, 0x4a, 0xdc, 0x5c, 0xe4, 0x9f, 0xf4, 0x88, 0x07, 0x49, 0xfe,
	0x21, 0x77, 0x8d, 0xd6, 0xcd, 0x6f, 0xe0, 0xc7, 0xea, 0xd8, 0xd1, 0x29, 0x94, 0x64, 0xeb, 0xd8,
	0x4f, 0x20, 0x79, 0x69, 0xc1, 0x97, 0xe9, 0xee, 0x7e, 0xbf, 0xe7, 0x9e, 0xe1, 0x31, 0x07, 0x4a,
	0x43, 0x16, 0xc2, 0xbb, 0xe0, 0x53, 0x40, 0x9e, 0xbb, 0xf5, 0xc1, 0xd2, 0x0c, 0x35, 0x5a, 0xc7,
	0x5b, 0xc5, 0x6a, 0x96, 0xbb, 0xc3, 0xd3, 0x10, 0x43, 0x6c, 0x1c, 0xaf, 0x6f, 0x6d, 0x6c, 0x48,
	0x03, 0x54, 0x31, 0x2a, 0xee, 0x83, 0x12, 0x3c, 0x77, 0x7d, 0xa1, 0xc1, 0xe5, 0x01, 0xca, 0xa4,
	0xf5, 0xce, 0x8a, 0x98, 0xbd, 0x07, 0xc8, 0x20, 0x56, 0xd6, 0x07, 0x31, 0xad, 0x50, 0x24, 0x42,
	0x49, 0xf5, 0x0c, 0x51, 0x84, 0x01, 0x68, 0x89, 0x49, 0x9f, 0x8c, 0xc8, 0xf8, 0xe0, 0x72, 0xc0,
	0xda, 0x22, 0x56, 0x17, 0xb1, 0xae, 0x88, 0xdd, 0xa1, 0x4c, 0x26, 0xd7, 0x8b, 0xc2, 0x36, 0xd6,
	0x85, 0xfd, 0xcf, 0xe7, 0x4d, 0x61, 0x0f, 0xe6, 0x10, 0x47, 0x37, 0xce, 0x5f, 0xe7, 0x78, 0x27,
	0x1d, 0xbc, 0xdd, 0x31, 0xcb, 0x33, 0x8f, 0xb6, 0x49, 0x25, 0x92, 0xa9, 0xc8, 0xfa, 0x7b, 0x23,
	0x32, 0xde, 0x9f, 0x9c, 0xaf, 0x0b, 0xfb, 0x97, 0xd9, 0x14, 0xf6, 0xd9, 0xcf, 0xee, 0x96, 0x3b,
	0xde, 0x61, 0x07, 0x1e, 0x9b, 0xf7, 0xe4, 0x7e, 0x51, 0x52, 0xb2, 0x2c, 0x29, 0x59, 0x95, 0x94,
	0x7c, 0x56, 0xd4, 0x58, 0x56, 0xd4, 0xf8, 0xaa, 0xa8, 0xf1, 0xc4, 0x42, 0xa9, 0x5f, 0x66, 0x3e,
	0x0b, 0x30, 0xe6, 0xe9, 0xcc, 0x8f, 0x64, 0x70, 0x01, 0xaf, 0x42, 0x61, 0x2c, 0xf8, 0x6e, 0xf8,
	0xb7, 0x66, 0x7a, 0x3d, 0x4f, 0x85, 0xf2, 0x7b, 0xcd, 0x66, 0x57, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x17, 0xfb, 0x0b, 0x5c, 0x97, 0x01, 0x00, 0x00,
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GenesisSender) > 0 {
		i -= len(m.GenesisSender)
		copy(dAtA[i:], m.GenesisSender)
		i = encodeVarintDao(dAtA, i, uint64(len(m.GenesisSender)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.GenesisAllocation.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDao(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintDao(dAtA []byte, offset int, v uint64) int {
	offset -= sovDao(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.GenesisAllocation.Size()
	n += 1 + l + sovDao(uint64(l))
	l = len(m.GenesisSender)
	if l > 0 {
		n += 1 + l + sovDao(uint64(l))
	}
	return n
}

func sovDao(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDao(x uint64) (n int) {
	return sovDao(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDao
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisAllocation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDao
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDao
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDao
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.GenesisAllocation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisSender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDao
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDao
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDao
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GenesisSender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDao(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDao
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDao(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDao
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDao
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDao
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDao
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDao
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDao
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDao        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDao          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDao = fmt.Errorf("proto: unexpected end of group")
)
