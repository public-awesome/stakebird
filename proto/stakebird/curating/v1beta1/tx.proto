syntax = "proto3";

package stakebird.curating.v1beta1;

option go_package = "github.com/public-awesome/stakebird/x/curating/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

// Msg defines the curating Msg service.
service Msg {
  // Post defines a method for sending a post
  rpc Post(MsgPost) returns (MsgPostResponse);

  // Upvote defines a method for upvoting a post
  rpc Upvote(MsgUpvote) returns (MsgUpvoteResponse);

  // Stake defines a method for staking on a post
  rpc Stake(MsgStake) returns (MsgStakeResponse);
}
message MsgPostResponse{}
message MsgUpvoteResponse{}
message MsgStakeResponse{}

message MsgPost {
  option (gogoproto.equal) = true;

  uint32 vendor_id = 1 [
    (gogoproto.customname) = "VendorID",
    (gogoproto.moretags) = "yaml:\"vendor_id\"",
    (gogoproto.jsontag) = "vendor_id"
  ];
  string post_id = 2 [
    (gogoproto.customname) = "PostID",
    (gogoproto.moretags) = "yaml:\"post_id\"",
    (gogoproto.jsontag) = "post_id"
  ];
  string creator = 3 [ (gogoproto.moretags) = "yaml:\"creator\"" ];
  string reward_account = 4
      [ (gogoproto.moretags) = "yaml:\"reward_account\"" ];
  string body = 5 [ (gogoproto.moretags) = "yaml:\"body\"" ];
}

message MsgUpvote {
  option (gogoproto.equal) = true;

  uint32 vendor_id = 1 [
    (gogoproto.customname) = "VendorID",
    (gogoproto.moretags) = "yaml:\"vendor_id\"",
    (gogoproto.jsontag) = "vendor_id"
  ];
  string post_id = 2 [
    (gogoproto.customname) = "PostID",
    (gogoproto.moretags) = "yaml:\"post_id\"",
    (gogoproto.jsontag) = "post_id"
  ];
  string curator = 3 [ (gogoproto.moretags) = "yaml:\"curator\"" ];
  string reward_account = 4
      [ (gogoproto.moretags) = "yaml:\"reward_account\"" ];
  int32 vote_num = 5;
}

message MsgStake {
    option (gogoproto.equal) = true;
  
    uint32 vendor_id = 1 [
      (gogoproto.customname) = "VendorID",
      (gogoproto.moretags) = "yaml:\"vendor_id\"",
      (gogoproto.jsontag) = "vendor_id"
    ];
    string post_id = 2 [
      (gogoproto.customname) = "PostID",
      (gogoproto.moretags) = "yaml:\"post_id\"",
      (gogoproto.jsontag) = "post_id"
    ];
    string delegator = 3 [ (gogoproto.moretags) = "yaml:\"delegator\"" ];
    string validator = 4 [ (gogoproto.moretags) = "yaml:\"validator\"" ];
    int64 amount = 5;
  }
  