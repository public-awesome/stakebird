syntax = "proto3";
package publicawesome.stargaze.ibcspend;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/public-awesome/stargaze/x/ibc-spend/types";
option (gogoproto.equal_all) = true;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
}

// this line is used by starport scaffolding # proto/tx/message

message CommunityPoolIBCSpendProposal {
    option (gogoproto.equal)            = false;
    option (gogoproto.goproto_getters)  = false;
    option (gogoproto.goproto_stringer) = false;
  
    string   title                           = 1;
    string   description                     = 2;
    string   recipient                       = 3;
    repeated cosmos.base.v1beta1.Coin amount = 4
        [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
    string   source_channel                  = 5;
    uint64   timeout                         = 6;
}

message CommunityPoolIBCSpendProposalWithDeposit {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = true;

  string title       = 1 [(gogoproto.moretags) = "yaml:\"title\""];
  string description = 2 [(gogoproto.moretags) = "yaml:\"description\""];
  string recipient   = 3 [(gogoproto.moretags) = "yaml:\"recipient\""];
  string amount      = 4 [(gogoproto.moretags) = "yaml:\"amount\""];
  string source_channel = 5 [(gogoproto.moretags) = "yaml:\"source_channel\""];
  uint64 timeout     = 6 [(gogoproto.moretags) = "yaml:\"timeout\""];
  string deposit     = 7 [(gogoproto.moretags) = "yaml:\"deposit\""];
}
