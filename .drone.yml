---
kind: pipeline
type: docker
name: default-build

steps:
  - name: fetch
    image: alpine/git
    commands:
      - git fetch --tags
  - name: lint
    image: golangci/golangci-lint:v1.36.0
    commands:
      - export GL_DEBUG=linters_output
      - export GOPACKAGESPRINTGOLISTERRORS=1
      - go mod download
      - golangci-lint run -v --timeout 10m --tests=false --skip-dirs="simapp"
    environment:
      GOPROXY: http://goproxy
  - name: test
    image: golang:1.15.7
    commands:
      - apt-get update && apt-get install -y cmake
      - ./contrib/go-test.sh
    environment:
      GOPROXY: http://goproxy
  - name: build
    image: golang:1.15-alpine3.12
    commands:
      - apk add --no-cache ca-certificates build-base git
      - wget https://github.com/CosmWasm/wasmvm/releases/download/v0.15.0/libwasmvm_muslc.a -O /lib/libwasmvm_muslc.a
      - sha256sum /lib/libwasmvm_muslc.a | grep 379c61d2e53f87f63639eaa8ba8bbe687e5833158bb10e0dc0523c3377248d01
      - FAUCET_ENABLED=true LEDGER_ENABLED=false BUILD_TAGS=muslc make build
    environment:
      GOPROXY: http://goproxy   
  - name: coverage
    image: plugins/codecov
    settings:
      required: true
      token:
        from_secret: codecov-token
    when:
      event:
        - push
        - pull_request
  - name: publish-test
    image: plugins/docker:18
    settings:
      dockerfile: docker/Dockerfile.test
      repo: rocketprotocol/rocketzone-relayer-test
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - latest
    when:
      event:
        - push
      branch: ibc
  - name: publish-docker
    image: plugins/docker:18
    settings:
      dockerfile: docker/Dockerfile
      repo: publicawesome/stargaze
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - develop
    when:
      event:
        - push
      branch:
        - develop
  - name: trigger
    image: plugins/downstream
    settings:
      server:
        from_secret: ci_server
      token:
        from_secret: ci_token
      deploy: deploy-devnet
      last_successful: true
      fork: true
      repositories:
        from_secret: downstream_repositories
    when:
      branch: 
        - develop
      event:
        - push
  - name: docker_release
    image: plugins/docker:18
    settings:
      dockerfile: docker/Dockerfile
      repo: publicawesome/stargaze
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      auto_tag: true
    when:
      event:
        - tag

  - name: release
    image: golang:1.15.7
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - curl -sL https://git.io/goreleaser | bash
    environment:
      GOPROXY: http://goproxy
    when:
      event:
        - tag

  - name: discord
    image: appleboy/drone-discord
    settings:
      webhook_id: 
        from_secret: discord_webhook_id
      webhook_token: 
        from_secret: discord_webhook_token
    when:
      status: [success, failure]

---
kind: pipeline
type: docker
name: ibc-integration-test

steps:
  - name: gaiad
    image: golang:1.15.7
    detach: true
    commands:
      - ./contrib/ci/setup-gaia.sh
    environment:
      GOPROXY: http://goproxy
  - name: stargaze
    image: golang:1.15.7
    commands:
      - ./contrib/ci/setup-stargaze.sh
    environment:
      GOPROXY: http://goproxy
    detach: true
  - name: relayer
    image: golang:1.15.7
    commands:
      - /bin/bash ./contrib/ci/setup-relayer.sh
    environment:
      GOPROXY: http://goproxy

trigger:
  branch:
    - ibc
  event:
    - push

depends_on:
  - default-build
---
kind: signature
hmac: 733ed6d33798b9e57f4e1a71f96e71c5532710a1b77a7e0bc65191e285162abb

...
